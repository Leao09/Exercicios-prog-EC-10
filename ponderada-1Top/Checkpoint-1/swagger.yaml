openapi: 3.0.0
info:
  title: Task and User API
  description: API for managing tasks and users
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /tasks:
    get:
      summary: Retrieve all tasks
      responses:
        '200':
          description: A list of tasks
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date
              required:
                - name
                - description
                - date
      responses:
        '201':
          description: The created task
  /tasks/{taskId}:
    parameters:
      - in: path
        name: taskId
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Retrieve a task by ID
      responses:
        '200':
          description: The requested task
    put:
      summary: Update a task by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date
              required:
                - name
                - description
                - date
      responses:
        '200':
          description: The updated task
    delete:
      summary: Delete a task by ID
      responses:
        '204':
          description: Task deleted successfully
  /users:
    get:
      summary: Retrieve all users
      responses:
        '200':
          description: A list of users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: The created user
  /users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Retrieve a user by ID
      responses:
        '200':
          description: The requested user
    put:
      summary: Update a user by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: The updated user
    delete:
      summary: Delete a user by ID
      responses:
        '204':
          description: User deleted successfully

    
